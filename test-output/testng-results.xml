<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="11" total="18" passed="7" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-08-25T11:16:04 IST" name="CalculatorSuite" finished-at="2025-08-25T11:16:04 IST" duration-ms="59">
    <groups>
      <group name="arith">
        <method signature="CalculatorDataProviderTests.testAddDataDriven(double,double,double)[pri:0, instance:tests.CalculatorDataProviderTests@5fcd892a]" name="testAddDataDriven" class="tests.CalculatorDataProviderTests"/>
      </group> <!-- arith -->
      <group name="datadriven">
        <method signature="CalculatorDataProviderTests.testAddDataDriven(double,double,double)[pri:0, instance:tests.CalculatorDataProviderTests@5fcd892a]" name="testAddDataDriven" class="tests.CalculatorDataProviderTests"/>
        <method signature="CalculatorDataProviderTests.testDivideByZeroDataDriven(double,double)[pri:0, instance:tests.CalculatorDataProviderTests@5fcd892a]" name="testDivideByZeroDataDriven" class="tests.CalculatorDataProviderTests"/>
      </group> <!-- datadriven -->
      <group name="errors">
        <method signature="CalculatorDataProviderTests.testDivideByZeroDataDriven(double,double)[pri:0, instance:tests.CalculatorDataProviderTests@5fcd892a]" name="testDivideByZeroDataDriven" class="tests.CalculatorDataProviderTests"/>
      </group> <!-- errors -->
    </groups>
    <test started-at="2025-08-25T11:16:04 IST" name="CalculatorTests" finished-at="2025-08-25T11:16:04 IST" duration-ms="59">
      <class name="tests.CalculatorPositiveTests">
        <test-method is-config="true" signature="beforeSuite()[pri:0, instance:tests.CalculatorPositiveTests@134593bf]" started-at="2025-08-25T11:16:04 IST" name="beforeSuite" finished-at="2025-08-25T11:16:04 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:tests.CalculatorPositiveTests@134593bf]" started-at="2025-08-25T11:16:04 IST" name="afterSuite" finished-at="2025-08-25T11:16:04 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- tests.CalculatorPositiveTests -->
      <class name="tests.CalculatorDataProviderTests">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:tests.CalculatorDataProviderTests@5fcd892a]" started-at="2025-08-25T11:16:04 IST" name="beforeClass" finished-at="2025-08-25T11:16:04 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.CalculatorDataProviderTests@5fcd892a]" started-at="2025-08-25T11:16:04 IST" name="beforeMethod" finished-at="2025-08-25T11:16:04 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="testAddDataDriven(double,double,double)[pri:0, instance:tests.CalculatorDataProviderTests@5fcd892a]" started-at="2025-08-25T11:16:04 IST" name="testAddDataDriven" data-provider="add-cases" finished-at="2025-08-25T11:16:04 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[-5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddDataDriven -->
        <test-method signature="testAddDataDriven(double,double,double)[pri:0, instance:tests.CalculatorDataProviderTests@5fcd892a]" started-at="2025-08-25T11:16:04 IST" name="testAddDataDriven" data-provider="add-cases" finished-at="2025-08-25T11:16:04 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddDataDriven -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.CalculatorDataProviderTests@5fcd892a]" started-at="2025-08-25T11:16:04 IST" name="beforeMethod" finished-at="2025-08-25T11:16:04 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="testAddDataDriven(double,double,double)[pri:0, instance:tests.CalculatorDataProviderTests@5fcd892a]" started-at="2025-08-25T11:16:04 IST" name="testAddDataDriven" data-provider="add-cases" finished-at="2025-08-25T11:16:04 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1.2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3.8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddDataDriven -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.CalculatorDataProviderTests@5fcd892a]" started-at="2025-08-25T11:16:04 IST" name="beforeMethod" finished-at="2025-08-25T11:16:04 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.CalculatorDataProviderTests@5fcd892a]" started-at="2025-08-25T11:16:04 IST" name="beforeMethod" finished-at="2025-08-25T11:16:04 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tests.CalculatorDataProviderTests@5fcd892a]" started-at="2025-08-25T11:16:04 IST" name="afterMethod" finished-at="2025-08-25T11:16:04 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="testAddDataDriven(double,double,double)[pri:0, instance:tests.CalculatorDataProviderTests@5fcd892a]" started-at="2025-08-25T11:16:04 IST" name="testAddDataDriven" data-provider="add-cases" finished-at="2025-08-25T11:16:04 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1.0E9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.0E9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2.0E9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddDataDriven -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tests.CalculatorDataProviderTests@5fcd892a]" started-at="2025-08-25T11:16:04 IST" name="afterMethod" finished-at="2025-08-25T11:16:04 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tests.CalculatorDataProviderTests@5fcd892a]" started-at="2025-08-25T11:16:04 IST" name="afterMethod" finished-at="2025-08-25T11:16:04 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.CalculatorDataProviderTests@5fcd892a]" started-at="2025-08-25T11:16:04 IST" name="beforeMethod" finished-at="2025-08-25T11:16:04 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="testAddDataDriven(double,double,double)[pri:0, instance:tests.CalculatorDataProviderTests@5fcd892a]" started-at="2025-08-25T11:16:04 IST" name="testAddDataDriven" data-provider="add-cases" finished-at="2025-08-25T11:16:04 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[-2.5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-2.5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-5.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddDataDriven -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tests.CalculatorDataProviderTests@5fcd892a]" started-at="2025-08-25T11:16:04 IST" name="afterMethod" finished-at="2025-08-25T11:16:04 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tests.CalculatorDataProviderTests@5fcd892a]" started-at="2025-08-25T11:16:04 IST" name="afterMethod" finished-at="2025-08-25T11:16:04 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="testDivideByZeroDataDriven(double,double)[pri:0, instance:tests.CalculatorDataProviderTests@5fcd892a]" started-at="2025-08-25T11:16:04 IST" name="testDivideByZeroDataDriven" data-provider="div-bad-inputs" finished-at="2025-08-25T11:16:04 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.ArithmeticException">
            <message>
              <![CDATA[Divide by zero]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.ArithmeticException: Divide by zero
at com.acme.calc.Calculator.divide(Calculator.java:17)
at tests.CalculatorDataProviderTests.testDivideByZeroDataDriven(CalculatorDataProviderTests.java:27)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at org.testng.internal.thread.graph.TestNGFutureTask.run(TestNGFutureTask.java:22)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.ArithmeticException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDivideByZeroDataDriven -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.CalculatorDataProviderTests@5fcd892a]" started-at="2025-08-25T11:16:04 IST" name="beforeMethod" finished-at="2025-08-25T11:16:04 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.CalculatorDataProviderTests@5fcd892a]" started-at="2025-08-25T11:16:04 IST" name="beforeMethod" finished-at="2025-08-25T11:16:04 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tests.CalculatorDataProviderTests@5fcd892a]" started-at="2025-08-25T11:16:04 IST" name="afterMethod" finished-at="2025-08-25T11:16:04 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="testDivideByZeroDataDriven(double,double)[pri:0, instance:tests.CalculatorDataProviderTests@5fcd892a]" started-at="2025-08-25T11:16:04 IST" name="testDivideByZeroDataDriven" data-provider="div-bad-inputs" finished-at="2025-08-25T11:16:04 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[-5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.ArithmeticException">
            <message>
              <![CDATA[Divide by zero]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.ArithmeticException: Divide by zero
at com.acme.calc.Calculator.divide(Calculator.java:17)
at tests.CalculatorDataProviderTests.testDivideByZeroDataDriven(CalculatorDataProviderTests.java:27)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at org.testng.internal.thread.graph.TestNGFutureTask.run(TestNGFutureTask.java:22)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.ArithmeticException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDivideByZeroDataDriven -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tests.CalculatorDataProviderTests@5fcd892a]" started-at="2025-08-25T11:16:04 IST" name="afterMethod" finished-at="2025-08-25T11:16:04 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:tests.CalculatorDataProviderTests@5fcd892a]" started-at="2025-08-25T11:16:04 IST" name="afterClass" finished-at="2025-08-25T11:16:04 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- tests.CalculatorDataProviderTests -->
    </test> <!-- CalculatorTests -->
  </suite> <!-- CalculatorSuite -->
</testng-results>
